# .github/workflows/black-history-collection.yml
name: Black History Data Collection

on:
  schedule:
    # Run daily at 2 AM UTC to avoid peak API usage
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allow manual triggering
    inputs:
      period:
        description: 'Historical period to collect'
        required: false
        default: 'slavery_era'
        type: choice
        options:
        - slavery_era
        - reconstruction  
        - jim_crow_resistance
        - all
      max_items:
        description: 'Maximum items to collect per run'
        required: false
        default: '50'
        type: string

jobs:
  collect-black-history:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 python-dateutil
        
    - name: Create data directories
      run: |
        mkdir -p data/documents
        mkdir -p data/analysis
        mkdir -p data/images
        
    - name: Run Black History Collection
      env:
        COLLECTION_PERIOD: ${{ github.event.inputs.period || 'slavery_era' }}
        MAX_ITEMS: ${{ github.event.inputs.max_items || '50' }}
      run: |
        python scripts/black_history_collector.py
        
    - name: Generate collection report
      run: |
        echo "# Daily Collection Report - $(date)" > collection_report.md
        echo "" >> collection_report.md
        echo "## Items Collected Today" >> collection_report.md
        find data/documents -name "*.json" -newer data/documents/.last_run 2>/dev/null | wc -l >> collection_report.md || echo "0" >> collection_report.md
        echo "" >> collection_report.md
        echo "## Total Items in Collection" >> collection_report.md
        find data/documents -name "*.json" | wc -l >> collection_report.md
        echo "" >> collection_report.md
        echo "## Recent Significant Finds" >> collection_report.md
        find data/analysis -name "*.md" -newer data/documents/.last_run 2>/dev/null | head -5 | xargs -I {} basename {} .md >> collection_report.md || echo "None today" >> collection_report.md
        
        # Create timestamp for next run
        touch data/documents/.last_run
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Black History Collector"
        git add data/
        git add collection_report.md
        
        # Only commit if there are changes
        if git diff --staged --quiet; then
          echo "No new data to commit"
        else
          git commit -m "📚 Daily Black History Collection - $(date '+%Y-%m-%d')"
          git push
        fi
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: black-history-data-${{ github.run_number }}
        path: |
          data/
          collection_report.md
        retention-days: 30
        
    - name: Create issue on significant finds
      if: ${{ github.event_name == 'schedule' }}
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          // Check if we found any high-significance items
          const analysisFiles = fs.readdirSync('data/analysis');
          const recentFinds = analysisFiles.filter(file => {
            const stat = fs.statSync(`data/analysis/${file}`);
            const today = new Date();
            const fileDate = new Date(stat.mtime);
            return (today - fileDate) < 24 * 60 * 60 * 1000; // Within 24 hours
          });
          
          if (recentFinds.length > 0) {
            const issueBody = `
            # 🔍 Significant Black History Finds - ${new Date().toDateString()}
            
            Our automated collection discovered ${recentFinds.length} historically significant items today:
            
            ${recentFinds.map(file => `- ${file.replace('.md', '').replace('_', ' ')}`).join('\n')}
            
            ## Next Steps
            - [ ] Review items for unique historical value
            - [ ] Consider featuring in educational materials
            - [ ] Check for related materials to collect
            - [ ] Add to thematic collections
            
            *This issue was automatically created by our Black History preservation system.*
            `;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `📚 New Historical Finds - ${new Date().toDateString()}`,
              body: issueBody,
              labels: ['black-history', 'preservation', 'auto-generated']
            });
          }

  weekly-summary:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' && github.event.schedule == '0 2 * * 0'  # Sunday 2 AM
    needs: collect-black-history
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Generate weekly summary
      run: |
        echo "# Weekly Black History Collection Summary" > weekly_summary.md
        echo "**Week of:** $(date '+%Y-%m-%d')" >> weekly_summary.md
        echo "" >> weekly_summary.md
        
        echo "## Collection Progress" >> weekly_summary.md
        echo "- **Total Documents:** $(find data/documents -name "*.json" | wc -l)" >> weekly_summary.md
        echo "- **Analysis Files:** $(find data/analysis -name "*.md" | wc -l)" >> weekly_summary.md
        echo "- **This Week:** $(find data/documents -name "*.json" -mtime -7 | wc -l) new items" >> weekly_summary.md
        echo "" >> weekly_summary.md
        
        echo "## Historical Periods Covered" >> weekly_summary.md
        for period in slavery_era reconstruction jim_crow_resistance; do
          count=$(find data/documents -name "${period}_*.json" | wc -l)
          echo "- **${period//_/ }:** $count items" >> weekly_summary.md
        done
        echo "" >> weekly_summary.md
        
        echo "## Most Significant Recent Finds" >> weekly_summary.md
        find data/analysis -name "*.md" -mtime -7 | head -10 | while read file; do
          title=$(basename "$file" .md | sed 's/_/ /g')
          echo "- $title" >> weekly_summary.md
        done
        
    - name: Commit weekly summary
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Weekly Summary Bot"
        git add weekly_summary.md
        git commit -m "📊 Weekly Collection Summary - $(date '+%Y-%m-%d')" || exit 0
        git push